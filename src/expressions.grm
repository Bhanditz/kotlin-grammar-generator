expression
  : "(" expression ")" // see tupleLiteral
  : "new" constructorInvocation
  : literalConstant
  : functionLiteral
  : tupleLiteral
  : listLiteral
  : mapLiteral
  : "null"
  : binOpExpression
  : unOpExpression
  : name functionParameters? // TODO: ambiguity here
  : FieldName
  : if
// TODO: list comprehension
  : jump
  ;

binaryOperation
  : "+" : "-" : "*" : "/"
  : "|" : "||" : "&" : "&&" : "^" // Maybe we can drop "^"
  : "<" : ">" : ">=" : "<="
  : "==" : "==="
  : "in"
  : "is" : "isnot"
  ;

unaryOperation
  : "-" : "+"
  : "!"
  ;

jump
  : "throw" expression
  : "return" expression
  : "continue" SimpleName
  : "break" SimpleName
// yield ?
  ;

tupleLiteral // No, (a) is not a tuple
  : "(" ")"
  : "(" expression  ("," expression)+ ")"
  ;

functionLiteral
  : "{" SimpleName "=>" expression "}"
  : "{" functionTypeContents "=>" expression "}"
  : "{" "(" parameter{","} ")" "=>" expression "}"
  ;

constructorInvocation
  : userType "(" expression{","} ")"
  ;

listLiteral
  : "[" expression{","} "]"
  ;

mapLiteral
  : "[" mapEntryLiteral ("," mapEntryLiteral)* "]"
  : "[" ":" "]"
  ;

mapEntryLiteral
  : expression ":" expression
  ;