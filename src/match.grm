match
  : expression "match" "{" matchEntry+ "}"
  ;

matchEntry
  : "case" pattern "=>" expression // TODO: Consider other options than "=>"
  ;

pattern
  : constantPattern // literal
  : variablePattern // variable from the context
  : tuplePattern
  : bindingPattern
  : decomposerPattern // labeled components are allowed
  ;

tuplePattern
  : "(" ((SimpleName "=")? pattern{","})? ")"
  ;

bindingPattern
  : "?" SimpleName? (":" pattern)?
  ;

decomposerPattern
  : userType tuplePattern?
  ;