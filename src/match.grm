match
  : expression "match" "{" matchEntry+ "}"
  ;

matchEntry
  : attributes "case" pattern ("if" "(" expression ")")? "=>" expression // TODO: Consider other options than "=>"
  ;

pattern
  : constantPattern // literal
  : variablePattern // variable from the context
  : tuplePattern
  : bindingPattern // we allow non-linear patterns
  : decomposerPattern // labeled components are allowed
  : arrowPattern
  ;

constantPattern
  : literalConstant
  ;


tuplePattern
  : "(" ((SimpleName "=")? pattern{","})? ")"
  ;

bindingPattern
  : "?" SimpleName? (":" pattern)?
  ;

decomposerPattern
  : userType tuplePattern?
  ;

arrowPattern
  : pattern "->" pattern
  ;