[start] jetlFile
  : preamble toplevelObject*
  ;

[start] script
  : preamble expression*
  ;

preamble
  : namespaceHeader? import*
  ;

namespaceHeader
  : modifiers "namespace" SimpleName{"."} SEMI?
  ;

import
  : "import" SimpleName{"."} ("." "*" | "as" SimpleName)?
  ;

toplevelObject
  : namespace
  : class
  : extension
  : function
  : property
  : typedef
  : decomposer
  ;

namespace
  : "namespace" SimpleName{"."} "{"
       import*
       toplevelObject*
    "}"
  ;

typedef
  : modifiers "type" SimpleName typeParameters? "=" type
  ;

extension
  : modifiers "extension" SimpleName? typeParameters? "for" type classBody? // properties cannot be lazy, cannot have backing fields
  ;
