/*

internal class Example<X, T : Comparable<X>>(protected val x : Foo<X, T>, y : Some)
    : Bar(x), Foo<X, T> by x, IAbstractSome by y.asAbstract()
    where
      T : Function<Object, Object>
{
  // members
}

*/

class
  : modifiers "class" SimpleName
      typeParameters?
      ("wraps" | modifiers)?
      valueParameters?
      (":" attributes delegationSpecifier{","})?
      (classBody? | enumClassBody)
  ;


typeParameters
  : "<" typeParameter{","} ">"
    ("where" typeConstraint{","})?
  ;

classBody
  : ("{" memberDeclaration "}")?
  ;

delegationSpecifier
  : constructorInvocation // type and constructor arguments
  : explicitDelegation
  ;

explicitDelegation
  : userType "by" expression // internal this expression no foo {bar} is allowed
  ;

typeParameter
  : modifiers SimpleName (":" userType)?
  ;

typeConstraint
  : userType ":" type
  : "class" "object" userType ":" type
  ;